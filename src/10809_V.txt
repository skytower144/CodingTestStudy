//한 단어에서 각 알파벳이 처음 등장하는 위치를 찾는 문제
#include<stdio.h>
#include<string.h>

int main()
{
	int index;
	int alphabet[26] = {0, };
	int counter[26] = {0, };
	char input[100];

	scanf("%s", input);
	for(int x=0; x<strlen(input); x++)
	{
		index = input[x] - 'a';
		if (x==0)
			alphabet[index] = -1;
		else if(counter[index] == 1)
			continue;
		else
			alphabet[index] = x;
			counter[index]++;
	}
	for(int y=0; y<26; y++)
	{
		if(alphabet[y] == 0)
			printf("%d ", -1);
		else if(alphabet[y] == -1)
			printf("%d ", 0);
		else
			printf("%d ", alphabet[y]);
	}
}

/////////////////////////////////////////////////////////////////////////////////////
//훨씬 짧은 코딩..
#include<stdio.h>
int main(){
	char a[105]; int count; int i,j;
	scanf("%s",a);
	for(i=0;i<26;i++){
		count=0;
		for(j=0;j<105;j++){
			if(a[j]=='\0') break;
			if(a[j]-(i+97)==0){						//알파벳을 기준으로 삼음.
				printf("%d ",j);					//a를 잡고 있는 상태에서 인풋단어를 첫자리부터 비교/돌림
				count=4;							//임의로 4를 지정한 상태. 왜 4인지는ㅁㄹ.아무 수 지정한듯
				break;								//a가 인풋에 있다는 걸 찾은 순간 위치를 프린트 한 후,
			}
		}
		if(count==0) printf("-1 ");
	}
}
///////////////////////////////////////////////////////////////////////////////////////
//참고 후 보정한 코딩
#include<stdio.h>
#include<string.h>

int main()
{
	int counter = 0;
	int alphabet[26] = {0, };
	char input[100];
	for(int x=0; x<26; x++) alphabet[x] = -1;		//-1로 이미 다 지정을 해놓는다.
	scanf("%s", input);
	
	for(int y=0; y<strlen(input); y++)
	{
		if(alphabet[input[y]-'a'] == -1)			//같은 알파벳이 등장할 경우를 위해서 비교
			alphabet[input[y]-'a'] = y;
	}
	for(int z=0; z<26; z++) printf("%d ", alphabet[z]); 
}