//신나는 함수 실행// 메모이제이션
https://m.blog.naver.com/PostView.nhn?blogId=occidere&logNo=221405838341&proxyReferer=https:%2F%2Fwww.google.com%2F
------------------------------------------------------------------------------

#include <stdio.h>
int memo[21][21][21];
int w(int a, int b, int c)
{
	if((a<=20 && b<=20 && c<=20) && (a>0 && b>0 && c>0) && memo[a][b][c])
		return memo[a][b][c];
	
	else if(a<=0 || b<=0 || c<=0)
	{
		return 1;
	}
	
	else if(a>20 || b>20 || c>20)
	{
		return w(20,20,20);
	}
	
	else if(a<b && b<c)
	{
		memo[a][b][c] = w(a,b,c-1) + w(a,b-1,c-1) - w(a,b-1,c);
		return w(a,b,c-1) + w(a,b-1,c-1) - w(a,b-1,c);
	}
	else
	{
		memo[a][b][c] = w(a-1,b,c) + w(a-1,b-1,c) + w(a-1,b,c-1) - w(a-1,b-1,c-1);
		return w(a-1,b,c) + w(a-1,b-1,c) + w(a-1,b,c-1) - w(a-1,b-1,c-1);
	}
}
int main()
{
	int A,B,C;
	while(1)
	{
		scanf("%d %d %d", &A, &B, &C);
		if(A==-1 && B==-1 && C==-1)
			break;
		int W = w(A,B,C);
		printf("w(%d, %d, %d) = %d\n", A,B,C,W);
	}
	return 0;
}

----------------------------------------------------------------------------
int recursion(int a, int b, int c){

    if(a <= 0 || b <= 0 || c <= 0){
        return 1;
    }
        
    if(a > 20 || b > 20 || c > 20){
       return recursion(20,20,20);
    }

//조건을 일일히 정해주는 대신 코드 순서를 바꿔서 하는 방식도 있다.
    if(w[a][b][c] != 0) return w[a][b][c];

    if(a<b && b<c){
        w[a][b][c] = recursion(a, b, c-1) + recursion(a, b-1, c-1) - recursion(a, b-1, c);
    }else{
        w[a][b][c] = recursion(a-1, b, c) + recursion(a-1, b-1, c) + recursion(a-1, b, c-1) - recursion(a-1, b-1, c-1);
    }
    return w[a][b][c];
}
