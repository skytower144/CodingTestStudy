//N과 M (4)

내 풀이):

#include <stdio.h>
int N,M;
int arr[10] = {0, };

void dfs(int ct)
{
	if(ct==M)
	{
		for(int x=0; x<M; x++)
		{
			printf("%d ", arr[x]);
		}
		printf("\n");
		return;
	}
	for(int i=1; i<=N; i++)
	{
		if(ct==0)
		{
			arr[ct] = i;
			dfs(ct+1);	
		}
		else
		{
			if(arr[ct-1] <= i)
			{
				arr[ct] = i;
				dfs(ct+1);	
			}
		}
	}
}

int main(void)
{
	scanf("%d %d", &N, &M);
	dfs(0);
	
	return 0;
}

----------------------------------------------------------------------------------------------------

#include <iostream>
#include <vector>
using namespace std;

const int MAX = 8 + 1;

int N, M;
int arr[MAX];

void func(int cnt)
{
	if (cnt == M)
	{
		for (int i = 0; i < M; i++)
			cout << arr[i] << " ";
		cout << "\n";
		return;
	}

	// 직전에 넣은 숫자보다 동일한 숫자는 나와도 되지만
	// 그보다 작은 숫자는 나오면 안된다.
	for (int i = (cnt == 0) ? 1 : arr[cnt - 1]; i <= N; i++) //동일한 숫자가 나올 수 있으니까 
	                                                         //전에 배열에 넣었던 숫자부터 반복문을 돌리는 것이 핵심이였습니다.
	{
		arr[cnt] = i;
		func(cnt + 1);
	}
}

int main(void)
{
	cin >> N >> M;

	func(0);
	return 0;
}

